<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="1" total="7" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="30070" started-at="2018-05-30T06:38:15Z" finished-at="2018-05-30T06:38:45Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="30070" started-at="2018-05-30T06:38:15Z" finished-at="2018-05-30T06:38:45Z">
      <class name="testcase.CaseCompanyInfoTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testcase.CaseCompanyInfoTest@685cb137]" name="beforeClass" is-config="true" duration-ms="13" started-at="2018-05-30T14:38:15Z" finished-at="2018-05-30T14:38:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="f()[pri:0, instance:testcase.CaseCompanyInfoTest@685cb137]" name="f" duration-ms="10012" started-at="2018-05-30T14:38:15Z" finished-at="2018-05-30T14:38:25Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at testcase.CaseCompanyInfoTest.f(CaseCompanyInfoTest.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="SKIP" signature="f()[pri:0, instance:testcase.CaseCompanyInfoTest@685cb137]" name="f" duration-ms="10007" started-at="2018-05-30T14:38:25Z" finished-at="2018-05-30T14:38:35Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at testcase.CaseCompanyInfoTest.f(CaseCompanyInfoTest.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:963)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="FAIL" signature="f()[pri:0, instance:testcase.CaseCompanyInfoTest@685cb137]" name="f" duration-ms="10003" started-at="2018-05-30T14:38:35Z" finished-at="2018-05-30T14:38:45Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at testcase.CaseCompanyInfoTest.f(CaseCompanyInfoTest.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:963)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testcase.CaseCompanyInfoTest@685cb137]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-05-30T14:38:45Z" finished-at="2018-05-30T14:38:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testcase.CaseCompanyInfoTest -->
      <class name="testcase.CaseLoginTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testcase.CaseLoginTest@7cd62f43]" name="beforeClass" is-config="true" duration-ms="7077" started-at="2018-05-30T14:38:15Z" finished-at="2018-05-30T14:38:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="signOutTest()[pri:0, instance:testcase.CaseLoginTest@7cd62f43]" name="signOutTest" duration-ms="2" started-at="2018-05-30T14:38:22Z" finished-at="2018-05-30T14:38:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signOutTest -->
        <test-method status="PASS" signature="loginTest()[pri:0, instance:testcase.CaseLoginTest@7cd62f43]" name="loginTest" duration-ms="8488" started-at="2018-05-30T14:38:22Z" finished-at="2018-05-30T14:38:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testcase.CaseLoginTest@7cd62f43]" name="afterClass" is-config="true" duration-ms="57" started-at="2018-05-30T14:38:31Z" finished-at="2018-05-30T14:38:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testcase.CaseLoginTest -->
      <class name="testcase.LongguoLoginTest">
        <test-method status="PASS" signature="TestDome()[pri:0, instance:testcase.LongguoLoginTest@6a41eaa2]" name="TestDome" duration-ms="5887" started-at="2018-05-30T14:38:15Z" finished-at="2018-05-30T14:38:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestDome -->
      </class> <!-- testcase.LongguoLoginTest -->
      <class name="testcase.CaseChoicePermissionTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testcase.CaseChoicePermissionTest@6a4f787b]" name="beforeClass" is-config="true" duration-ms="6767" started-at="2018-05-30T14:38:15Z" finished-at="2018-05-30T14:38:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="choicePermissionTest()[pri:0, instance:testcase.CaseChoicePermissionTest@6a4f787b]" name="choicePermissionTest" duration-ms="16268" started-at="2018-05-30T14:38:22Z" finished-at="2018-05-30T14:38:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- choicePermissionTest -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testcase.CaseChoicePermissionTest@6a4f787b]" name="afterClass" is-config="true" duration-ms="51" started-at="2018-05-30T14:38:38Z" finished-at="2018-05-30T14:38:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testcase.CaseChoicePermissionTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
